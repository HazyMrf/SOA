@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/latest/C4_Container.puml

LAYOUT_WITH_LEGEND()

Person(user, "Пользователь", "Использует систему через REST API.")
System(broker, "Брокер сообщений", "Передает события просмотров и лайков.")

Container_Boundary(main_service, "Главный сервис") {
    Container(main_api, "API Сервис", "NodeJS/Express", "Обрабатывает запросы REST API и gRPC для аутентификации и передачи данных.")
    ContainerDb(api_db, "API База данных", "ClickHouse", "Хранит данные о пользователях, сессиях и токенах аутентификации.")
}

Container_Boundary(tasks_service, "Сервис задач и комментариев") {
    Container(tasks_api, "API Задач", "Python/Flask", "Позволяет создавать, получать, обновлять и удалять задачи и комментарии.")
    ContainerDb(tasks_db, "База данных задач", "ClickHouse", "Хранит информацию о задачах и комментариях.")
}

Container_Boundary(stats_service, "Сервис статистики") {
    Container(stats_api, "API Статистики", "Python/Flask", "Обрабатывает данные о лайках и просмотрах и предоставляет статистику.")
    ContainerDb(stats_db, "База данных статистики", "ClickHouse", "Хранит данные о лайках и просмотрах.")
}

Rel(user, main_api, "Использует", "HTTP/REST")
Rel(main_api, api_db, "Читает/Записывает")
Rel(main_api, tasks_api, "Делает запросы", "gRPC")
Rel(main_api, stats_api, "Делает запросы", "gRPC")

Rel(tasks_api, tasks_db, "Читает/Записывает")
Rel(stats_api, stats_db, "Читает/Записывает")

Rel(main_api, broker, "Передача событий для статистики")
Rel(stats_api, broker, "Подписывается на события", "MQ")

@enduml